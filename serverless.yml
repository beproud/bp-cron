# Service name
service: bp-cron

# Provider
provider:
  name: aws
  runtime: python3.7
  region: ${env:AWS_DEFAULT_REGION}
  logRetentionInDays: 14
  deploymentBucket:
   name: ${env:AWS_S3_BUCKET_NAME}
  environment:
    TZ: Asia/Tokyo

# Package
package:
  individually: true
  include:
    - src/**
  exclude:
    - env/**
    - .git/
    - .gitignore
    - node_modules/**
    - README.md
    - package.json
    - package-lock.json
    - Makefile
    - LICENSE
    - ChangeLog.txt
    - requirements.txt

# Lambda functions
functions:
  # 誕生日通知
  birthday:
    handler: src/handlers/birthday.job
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
    events:
      - schedule: cron(30 00 * * ? *)

  # 9:00 くらいにカレンダーからミーティング一覧通知
  meeting_reminder:
    handler: src/handlers/meeting_reminder.job
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
    events:
      - schedule: cron(0 00 * * ? *)

  # 直近開催のミーティングを通知
  meeting_reminder_recent:
    handler: src/handlers/meeting_reminder.recent
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
    events:
      - schedule: cron(0/15 9-23 * * ? *)

  # 8:30 くらいにリモート勤務一覧(メンション付き)
  remote_reminder_morning:
    handler: src/handlers/remote_reminder.morning_job
    layers:
      - {Ref: PythonRequirementsLambdaLayer}
    events:
      - schedule: cron(30 23 * * ? *)

  # 0:30 くらいにリモート勤務一覧
  remote_reminder_night:
     handler: src/handlers/remote_reminder.night_job
     layers:
       - {Ref: PythonRequirementsLambdaLayer}
     events:
       - schedule: cron(30 15 * * ? *)

# Plugins
plugins:
  - serverless-python-requirements
  - serverless-prune-plugin

# Custom settings
custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
    layer: true
  prune:
    automatic: true
    number: 3

# lambda
timeout: 60
