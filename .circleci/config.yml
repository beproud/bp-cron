version: 2
jobs:
  build:
    docker:
      - image: nikolaik/python-nodejs:latest
    # Show Serverless Framework log
    environment: SLS_DEBUG=*
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      # Load aws info
      - run: echo ${ENV} > ~/.env
      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            source ./venv/bin/activate
            pip install -U pip setuptools tox
      - run:
          name: Run test
          command: |
            source ./venv/bin/activate
            tox -epy37,flake8
      # install Serverless Framework
      - run: npm install
      - run:
          name: install-serverless
          command: npm install -g serverless@1.41.0
      - run:
          name: serverless-python-requirements install
          command: sls plugin install -n serverless-python-requirements

      - run:
          name: serverless-prune-plugin install
          command: sls plugin install -n serverless-prune-plugin

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
      - store_test_results:
          path: test-results

      - deploy:
          name: Deploy by Serverless Framework
          command: |
            if [ "${CIRCLE_BRANCH}" == "circleci-deploy" ]; then
            sls deploy -k ${AWS_ACCESS_KEY_ID} -s ${AWS_SECRET_ACCESS_KEY}
            else
            echo "Not master branch so not deploying"
            fi
